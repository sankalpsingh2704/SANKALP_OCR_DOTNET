#-----------------------------------------------	****	----------------------------------------------#
# 									Database details
enable_db_update=False
# True: load DB details during run time and that too if Batch mode run, False: will not be load DB details during run time 
db_url=jdbc:jtds:sqlserver://localhost:1433/Invoice
db_user=sa
db_pass=iqss
table_name=Invoice

#fourceDLLConfic = TRUE - to load 32 bit config only, False - load dlls based on OS; default = FALSE
fourceDLLConfic=FALSE

#32 dlls should be located at <current>\dlls\x86
dll32names=liblept168.dll,gsdll32.dll,libtesseract302.dll

#64 dlls should be located at <current>\dlls\x64
dll64names=liblept168.dll,gsdll64.dll,libtesseract302.dll

# True :- log the extracted text into log file, False:- won't log extracted text details. Default  False
log.extracted.txt=TRUE

#-----------------------------------------------	****	----------------------------------------------#
# 									Key Fields for OCR Extraction	
# The key details should be in order, if key3 immediate after key1 then key3 will not be consider for extraction, also key details specify in order to get result in CSV.
# That is it will return result as key order.
# key_<>_type
#	1. String
#	2. Date
#	3. Number
#	4. Amount
#
#	Key_1_expected_Value
#	1. MatchOnly - only the value matched with given regular expression
#	2. MatchAnywhere - value matched with given regular expression, that is, the expected value around the string.


replaceChar=\u20B9|USD|[,|RE|RS|$|INR|NR|EURO|RUPEE|\u20AC|£|#|:|=|-|)|(]|_|

#Key 1 details												
key1=COMMERCIAL INVOICE REF,Invoice No,Invoice Number,Inv No, Bill No, Bill Number,Invocie#,Invoice #,Invoice N0,Cl\u2014,
key1_escape_string=[`~!@#$%^&*()_+\\\\;\',./{}|:\"<>?]
key1_reg_exp=.*\\d+.*
key1_type=String
key1_expected_value=MatchAnywhere
key1_max_length=
key1_json_key=InvoiceNo
key1_db_col=InvoiceNumber


key2= Bill Date,Dated,Invoice Date, Inv Date,date
key2_escape_string=
key2_reg_exp=(\\d{2,4}[-/ ]\\d{1,2}[-/ ]\\d{1,4})|(([0-9])|([0-2][0-9])|([3][0-1]))[\\-/ ](jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|january|february|march|april|may|june|july|august|september|october|november|december)[\\-/ ]\\d{2,4}
key2_type=Date
key2_expected_value=MatchOnly
key2_max_length=
key2_json_key=InvoiceDate
key2_db_col=InvoiceDate

key3=PAN No:,PAN,PAN NUMBER,PAN NO,PAN #,
key3_escape_string=
key3_reg_exp=[A-Z]{5}[0-9]{4}[A-Z]{1}
key3_type=String
key3_expected_value=MatchOnly
key3_max_length=
key3_json_key=PAN
key3_db_col=PAN

key4=Buyer's Order No,PURCHASE NUMBER,PURCHASE ORDER NUMBER,PURCHASE ORDER NO,PO NUMBER,P.O NO,P.0 No,P/O NO.,P.O. NO.,
key4_escape_string=
key4_reg_exp=.*\\d+.*
key4_type=String
key4_expected_value=MatchAnywhere
key4_max_length=15
key4_json_key=PO
key4_db_col=PONo


key5=this month's charges,Invoice Total,TOTAL AMOUNT,AMOUNT AFTER ROUND OFF, GRAND TOTAL, NET TOTAL, INVOICE AMOUNT,NET AMOUNT,GROSS TOTAL, GROSS TOTAL AMOUNT,BASE TOTAL,Rounded,FREIGHT,Total Current Charges,
key5_escape_string=AMOUNT,TOTAL,DUE,INR,AFTER,ROUND,OFF,
key5_reg_exp=\\d+
key5_type=Amount
key5_expected_value=MatchOnly
key5_max_length=
key5_json_key=Amount
key5_db_col=Amount


key6=Company's VAT TIN,
key6_escape_string=[.:]
key6_reg_exp=.*\\d+.*
key6_type=String
key6_expected_value=MatchAnywhere
key6_max_length=
key6_json_key=CompanyVatTin
key6_db_col=


key7=Company's CST No,
key7_escape_string=[.:]
key7_reg_exp=.*\\d+.*
key7_type=String
key7_expected_value=MatchAnywhere
key7_max_length=
key7_json_key=CompanyCstNo
key7_db_col=


key8=Buyer's VAT TIN,
key8_escape_string=[.:]
key8_reg_exp=.*\\d+.*
key8_type=String
key8_expected_value=MatchAnywhere
key8_max_length=
key8_json_key=BuyerVatTin
key8_db_col=


key9=Buyer's CST No,Buyer'sCSTNo,
key9_escape_string=[.:]
key9_reg_exp=.*\\d+.*
key9_type=String
key9_expected_value=MatchAnywhere
key9_max_length=
key9_json_key=BuyerCstNo
key9_db_col=

key10=Bill to Address,
key10_escape_string=
key10_reg_exp=[A-Z]{5}[0-9]{4}[A-Z]{1}
key10_type=String
key10_expected_value=MatchAnywhere
key10_max_length=
key10_json_key=ADDRESS
key10_db_col=ADDRESS

AmountWordings =GRAND TOTAL IN WORDS,TOTAL IN WORDS,INDIAN RUPEES,TOTAL US DOLLARS,UNITED STATES DOLLARS,RUPEES

# True - to extract Vendor Name. False: do not extract vender, this vendor name will be added before the SourceFile name into CSV format, and in JSON the key will be  "Vendor"
extract_vendor=True
companytypes =COMPONENTS,SERVICES,LIMITED, LTD, LLS,INC,LIMITED LIABILITY COMPANY,CORPORATION,COMPANY,

item_start=description
item_end=grand total

# For XML output, It will use the below XML-Configuration as well as #Key 1 details.
# Here is the description about the item details, it will be consider as attribute and the 
# "#Key 1 details" will be consider as separate node.
# Example:- <ITEM  CODE="XD-23444" NAME="LAPTOP" QTY="100" PRICE="123444.00"  TOTAL="12344400.00" /> 

keycol_1=item name|part name| name| description| details| specification 
keycol_1_type=String
keycol_1_nodename=NAME

keycol_2=quantity| qty | units| total qty
keycol_2_type=Number
keycol_2_nodename=QTY

keycol_3=price|amount| price per unit
keycol_3_type=Amount
keycol_3_nodename=PRICE

keycol_4=total amount| total| amount
keycol_4_type=Amount
keycol_4_nodename=TOTAL

keycol_5=discount| offer
keycol_5_type=Amount
keycol_5_nodename=DISCOUNT 

#keycol_6=excise|duty
#keycol_6_type=Amount
#keycol_6_nodename=EXCISE

#keycol_7=assessable
#keycol_7_type=Amount
#keycol_7_nodename=ASSESSABLE


#-----------------------------------------------	****	----------------------------------------------#