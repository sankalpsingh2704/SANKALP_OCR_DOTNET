@model  PayBack.Models.UserModel
@{
    ViewBag.Title = "UsersView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Html.EnableUnobtrusiveJavaScript(true);
}

<div id="content">

    <!-- row -->
    <div class="row">

        <!-- col -->
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h3 class="page-title txt-color-blueDark">
                <!-- PAGE HEADER --><i class="fa-fw fa fa-home"></i><strong> PayBAck </strong> <span>
                    >
                    Users
                </span>
            </h3>
        </div>

    </div>


    <div id="usersview">
        <!-- widget grid -->
        <section id="widget-grid" class="">

            <!-- row -->
            <div class="row" id="symaindiv">

                <!-- NEW WIDGET START -->
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <table id="jqgrid"></table>
                    <div id="pjqgrid"></div>

                    <br>
                    @*<a href="javascript:void(0)" id="m1">Get Selected id's</a>
                        <br>
                        <a href="javascript:void(0)" id="m1s">Select(Unselect) row 13</a>*@
                    <table>
                        <tr>
                            <td style="margin-right:5%;">
                                <div id="btnAddUser" class="btn btn-sm btn-primary" style="text-align:center; width:70px; margin-left:5%;">
                                    <span class="fa fa-plus"></span>
                                </div>
                            </td>

                            @*<td>
                                    <div id="btnEditUser" class="btn btn-sm btn-primary" style="text-align:center; width:70px; margin-left: 15%;">
                                        <span class="fa fa-pencil"></span>
                                    </div>
                                </td>*@
                        </tr>
                    </table>
                </article>
                <!-- WIDGET END -->

            </div>

            <!-- end row -->

        </section>
        <!-- end widget grid -->
    </div>

    <div id="AddUser" class="row" style="display:none">

        <!-- NEW COL START; In-line CSS to stretch div to screen -->
        <article class="col-sm-12 col-md-12 col-lg-6" style="width:100%">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
                <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                    <h2> Add new user </h2>

                </header>

                <!-- widget div-->
                <div>

                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->

                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body no-padding">

                        @*<form method="post" action="@Url.Action("Submit", "Users")"  class = "smart-form client-form" enctype="multipart/form-data"  >*@
                        @using (Html.BeginForm("CreateUser", "Users", FormMethod.Post, new { @class = "smart-form client-form", enctype = "multipart/form-data", id = "addform" }))
                        {
                            <fieldset>
                                <div class=" row">
                                    <section class="col col-4">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserFirstName, new { placeholder = "First Name", id = "txtFname", name = "txtFname" })
                                            @Html.ValidationMessageFor(m => m.UserFirstName)
                                        </label>

                                    </section>

                                    <section class="col col-4">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserMiddleName, new { placeholder = "Middle Name", id = "txtMname" })
                                            @Html.ValidationMessageFor(m => m.UserMiddleName)
                                        </label>

                                    </section>
                                    <section class="col col-4">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserLastName, new { placeholder = "Last Name", id = "txtLname" })
                                            @Html.ValidationMessageFor(m => m.UserLastName)
                                        </label>

                                    </section>
                                </div>
                            </fieldset>

                            <fieldset>
                                <div class="row">

                                    <section class="col col-3">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserLoginName, new { placeholder = "User Name" })
                                            @Html.ValidationMessageFor(m => m.UserLoginName)
                                        </label>

                                    </section>
                                    <section class="col col-3">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-envelope-o"></i>
                                            @Html.TextBoxFor(m => m.UserEmailID, new { placeholder = "Email " })
                                            @Html.ValidationMessageFor(m => m.UserEmailID)
                                        </label>
                                        <div id="errorEmail" style="color:#C00000"></div>
                                    </section>
                                    <section class="col col-3">
                                        <label class="select">
                                            @Html.DropDownList("UserDepartmentID", new SelectList(ViewBag.Departments, "DeptID", "DeptName"), "Department")
                                            @Html.ValidationMessage("UserDepartmentID")
                                        </label>

                                    </section>

                                    <section class="col col-3">
                                        <label class="select">
                                            @Html.DropDownList("UserTypeID", new SelectList(ViewBag.usertypes, "UserTypeID", "UserType1"), "Usertype")
                                            @Html.ValidationMessage("UserTypeID")
                                        </label>

                                    </section>
                                </div>
                            </fieldset>

                            <fieldset>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-lock"></i>
                                            @Html.PasswordFor(m => m.UserPassword, new { placeholder = "Password", id = "txtPassword" })
                                            @Html.ValidationMessageFor(m => m.UserPassword)
                                        </label>

                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-lock"></i>
                                            @Html.PasswordFor(m => m.ComparePassword, new { placeholder = "Re-enter Password", id = "txtReenterPassword" })
                                            @Html.ValidationMessageFor(m => m.ComparePassword)
                                        </label>

                                    </section>
                                </div>
                            </fieldset>

                            <fieldset>
                                <div class="row">
                                    <section>
                                        <table style="border-collapse:separate; border-spacing:16px; width:88%">
                                            <tr>
                                                <td>
                                                    <div class="input input-file">
                                                        <span class="button"><input type="file" id="file" name="file" accept="image/*" onchange="this.parentNode.nextSibling.value = this.value; theimage()">Browse</span><input type="text" id="fileUpload" name="logo" placeholder="Browse pic..." readonly="">@*<img id="upload" src="#" alt="your image" />*@
                                                    </div>
                                                    <div id="errorImage" style="color:#C00000"></div>
                                                </td>
                                                <td>
                                                    <label class="checkbox" style="margin-left:10%">
                                                        @Html.CheckBoxFor(m => m.IsActive)

                                                        <i></i>Disable
                                                    </label>
                                                </td>
                                                <td>
                                                    <label class="checkbox" style="margin-left:10%">
                                                        @Html.CheckBoxFor(m => m.IsFinance)

                                                        <i></i>Finance
                                                    </label>
                                                </td>
                                                <td>
                                                    <label class="checkbox" style="margin-left:10%">
                                                        @Html.CheckBoxFor(m => m.IsVendor)

                                                        <i></i>Vendor Management
                                                    </label>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <fieldset>
                                                        <div id="userpic"></div>
                                                    </fieldset>
                                                </td>
                                            </tr>
                                        </table>
                                    </section>
                                </div>
                            </fieldset>

                            <footer>
                                @*@Html.HiddenFor(m => m.UserID, new { id = "addUserid" })*@
                                <input type="submit" value="Add User" class="btn btn-primary" />
                                <input type="button" value="Cancel" class="btn btn-primary" id="btnaddcancel" />
                            </footer>
                            @*</form>*@
                        }

                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>
            <!-- end widget -->
        </article>
        <!-- END COL -->
        <!-- END COL -->
    </div>

    <div id="EditUser" class="row" style="display:none">

        <!-- NEW COL START; In-line CSS to stretch div to screen -->
        <article class="col-sm-12 col-md-12 col-lg-6" style="width:100%">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
                <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                    <h2> Edit User Details </h2>

                </header>

                <!-- widget div-->
                <div>

                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->

                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body no-padding">

                        @using (Html.BeginForm("Update", "Users", FormMethod.Post, new { @class = "smart-form client-form", enctype = "multipart/form-data" }))
                        {
                            <fieldset>
                                <div class="row">
                                    <section class="col col-4">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserFirstName, new { id = "fname", placeholder = "First Name" })
                                            @Html.ValidationMessageFor(m => m.UserFirstName)
                                        </label>

                                    </section>
                                    <section class="col col-4">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserMiddleName, new { id = "mname", placeholder = "Middle Name" })
                                            @Html.ValidationMessageFor(m => m.UserMiddleName)
                                        </label>

                                    </section>
                                    <section class="col col-4">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserLastName, new { id = "lname", placeholder = "Last Name" })
                                            @Html.ValidationMessageFor(m => m.UserLastName)
                                        </label>

                                    </section>
                                </div>
                            </fieldset>

                            <fieldset>
                                <div class="row">

                                    <section class="col col-3">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.TextBoxFor(m => m.UserLoginName, new { id = "loginname", placeholder = "User Name" })
                                            @Html.ValidationMessageFor(m => m.UserLoginName)
                                        </label>

                                    </section>
                                    <section class="col col-3">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-envelope-o"></i>
                                            @Html.TextBoxFor(m => m.UserEmailID, new { id = "email", placeholder = "Email ID" })
                                            @Html.ValidationMessageFor(m => m.UserEmailID)
                                        </label>
                                        <div id="errorEmailEdit" style="color:#C00000"></div>
                                    </section>

                                    <section class="col col-3">
                                        <label class="select">
                                            @Html.DropDownListFor(m => m.UserDepartmentID, new SelectList(ViewBag.Departments, "DeptID", "DeptName"), " Department ", new { id = "dept" })
                                            @Html.ValidationMessageFor(m => m.UserDepartmentID)
                                        </label>

                                    </section>
                                    <section class="col col-3">
                                        <label class="select">
                                            @Html.DropDownListFor(m => m.UserTypeID, new SelectList(ViewBag.usertypes, "UserTypeID", "UserType1"), " Usertype ", new { id = "usertype" })
                                            @Html.ValidationMessageFor(m => m.UserTypeID)
                                        </label>

                                    </section>

                                </div>
                            </fieldset>


                            <fieldset>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-lock"></i>
                                            @Html.PasswordFor(m => m.NewPassword, new { placeholder = "Password", id = "edittxtPassword" })
                                            @Html.ValidationMessageFor(m => m.NewPassword)
                                        </label>
                                        <div id="errorPwd" style="color:#C00000"></div>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-lock"></i>
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "Re-enter Password", id = "edittxtReenterPassword" })
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                        </label>
                                        <div id="errorRePwd" style="color:#C00000"></div>
                                    </section>
                                </div>
                            </fieldset>

                            <fieldset>
                                <div class="row">
                                    <section>
                                        <table style="border-collapse:separate; border-spacing:16px; width:88%">
                                            <tr>
                                                <td>
                                                    <div class="input input-file">
                                                        <span class="button"><input type="file" id="fileEdit" name="file" accept="image/*" onchange="this.parentNode.nextSibling.value = this.value">Browse</span><input type="text" id="fileUploadEdit" name="logo" placeholder="Browse pic..." readonly="">
                                                    </div>
                                                    <div id="errorImageUpdate" style="color:#C00000"></div>
                                                </td>
                                                <td>
                                                    <label class="checkbox" style="margin-left:10%" id="chkAdmin">
                                                        @Html.CheckBoxFor(m => m.IsActive, new { id = "isActive" })
                                                        <i></i>Disable
                                                    </label>
                                                </td>
                                                <td>
                                                    <label class="checkbox" style="margin-left:10%">
                                                        @Html.CheckBoxFor(m => m.IsFinance, new { id = "isFinance" })

                                                        <i></i>Finance
                                                    </label>
                                                </td>
                                                <td>
                                                    <label class="checkbox" style="margin-left:10%">
                                                        @Html.CheckBoxFor(m => m.IsVendor, new { id = "isVendor" })

                                                        <i></i>Vendor Management
                                                    </label>
                                                </td>

                                            </tr>

                                            <tr>
                                                <td>
                                                    <fieldset>
                                                        <div id="userpicEdit"></div>
                                                    </fieldset>
                                                </td>
                                            </tr>
                                        </table>
                                    </section>
                                </div>
                            </fieldset>

                            <fieldset>

                                @Html.HiddenFor(m => m.UserID, new { id = "hiddenuserid" })
                                @Html.HiddenFor(m => m.UserPassword, new { id = "hiddenpassword" })
                                @Html.HiddenFor(m => m.UserPic, new { id = "hiddenuserpic" })
                            </fieldset>

                            <footer>
                                <input type="submit" value="Update" class="btn btn-primary" />

                                <input type="button" value="Cancel" class="btn btn-primary" id="btneditcancel" />
                            </footer>
                        }

                    </div>

                    <!-- end widget content -->
                </div>
                <!-- end widget div -->
            </div>
            <!-- end widget -->
        </article>
        <!-- END COL -->
        <!-- END COL -->
    </div>

</div>

<style type="text/css">
    .avoid-this {
    }

    .current-invoice-image-icon {
    }

    .ui-jqgrid .ui-jqgrid-toppager {
        height: 30px !important;
    }
    /*.ui-jqgrid .ui-jqgrid-toppager .ui-pg-div>span { margin: 0 5px; font-size: 20px; }*/

    .ui-jqgrid tr.jqgrow td.wrap {
        white-space: normal !important;
        height: auto;
        padding-top: 2px;
        word-wrap: break-word;
    }

    .ui-jqgrid .ui-jqgrid-btable {
        cursor: pointer;
    }

    .ui-jqgrid tr.jqgrow td {
        white-space: normal !important;
        height: auto;
        vertical-align: text-top;
        padding-top: 2px;
        word-wrap: break-word;
    }

    .ui-jqgrid .ui-jqgrid-htable th div {
        height: auto;
        overflow: hidden;
        padding-right: 4px;
        padding-top: 2px;
        position: relative;
        vertical-align: text-top;
        white-space: normal !important;
    }

    #divInvoiceImages {
        left: 1%;
        top: 1%;
        width: 60%;
        max-height: 98%;
        min-height: 98%;
    }

    #divInvoiceDetails {
        position: relative;
        left: 64%;
        top: 1%;
        width: 36%;
        max-height: 98%;
        min-height: 98%;
        border: thin solid black;
    }

    #divInvoiceImage {
        height: 92%;
        border: thin solid;
        width: 100%;
        overflow: auto;
    }

    #imgInvoiceImages {
        width: 100%;
        height: 100%;
    }

    #tbInvoiceImages {
        position: absolute;
        top: 93%;
        width: 100%;
    }

        #tbInvoiceImages td {
            border: 1px solid;
            padding: 3px 5px 3px 5px;
            text-align: center;
        }

    #tbInvoiceDetails {
        width: 90%;
        background-color: white;
        left: 5%;
    }

        #tbInvoiceDetails td {
            padding: 5px;
        }


    #tbInvList {
        width: 98%;
        top: 2%;
        left: 1%;
        height: auto;
        position: absolute;
        border: 1px solid lime;
    }

        #tbInvList td, #tbInvList th {
            border: thin solid black;
            padding: 5px 3px 5px 3px;
        }

    .notapproved {
        color: blue;
    }

    .approved {
    }

    .ec-caret {
    }

    .ec-tr {
        display: none;
    }

    .ec-div {
        position: relative;
        width: 100%;
        height: auto;
        min-height: 606px;
        max-height: 400px;
        overflow: auto;
        padding: 0;
    }

    .ec-table-invoice-image-icons {
        left: .2%;
        width: 10%;
        height: auto;
        border: thin solid white;
    }

    .ec-div-invoice-image {
        left: 12%;
        top: .5%;
        width: 90%;
        height: 90%;
        border: thin solid black;
        position: absolute;
        overflow: auto;
    }

    .ec-table-invoice-image-commands {
        left: 12%;
        top: 92%;
        width: 90%;
        position: absolute;
    }

    .ec-table-invoice-editor {
    }

    .ec-table-invoice-image-commands td {
        padding: 2px !important;
        border: thin solid;
        text-align: center;
        vertical-align: middle;
    }

    .ec-table-invoice-editor td {
        border: none !important;
        padding: 5px 2px 5px 2px;
    }

    .ec-invoice-image-icon {
        position: relative;
        width: 79%;
        height: 60px;
    }

    .zoom {
    }

    .vertical-text {
        transform: rotate(270deg);
        transform-origin: left 0;
        position: relative;
        left: -8px;
        top: -110px;
        font-size: small;
    }

    .horizontal-text {
        position: relative;
        right: -33%;
        bottom: 35px;
        font-size: small;
    }
</style>
@*<style type="text/css">
        .ui-jqgrid tr.jqgrow td.wrap {
            white-space: normal !important;
            height: auto;
            padding-top: 2px;
            word-wrap: break-word;
        }

        .ui-jqgrid tr.jqgrow td {
            white-space: normal !important;
            height: auto;
            vertical-align: text-top;
            padding-top: 2px;
            word-wrap: break-word;
        }
    </style>*@


@section pagespecific {


    <script src="http://code.jquery.com/jquery-migrate-1.2.1.js"></script>

    <script src="~/Scripts/plugin/jquery-validate/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/plugin/jquery-validate/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            $.validator.unobtrusive.parse('form');

            $("#txtFname").on({
                keydown: function (e) {
                    if (((e.which >= 32 && e.which <= 64) && (e.which != 46 && e.which != 37 && e.which != 39 && e.which != 35 && e.which != 36))
                        || (e.which >= 91 && e.which <= 96) || (e.which >= 186 && e.which <= 222)) {
                        return false;
                    }
                }
            })

            $("#txtMname").on({
                keydown: function (e) {
                    if (((e.which >= 32 && e.which <= 64) && (e.which != 46 && e.which != 37 && e.which != 39 && e.which != 35 && e.which != 36))
                        || (e.which >= 91 && e.which <= 96) || (e.which >= 186 && e.which <= 222)) {
                        return false;
                    }
                }
            })

            $("#txtLname").on({
                keydown: function (e) {
                    if (((e.which >= 32 && e.which <= 64) && (e.which != 46 && e.which != 37 && e.which != 39 && e.which != 35 && e.which != 36))
                        || (e.which >= 91 && e.which <= 96) || (e.which >= 186 && e.which <= 222)) {
                        return false;
                    }
                }
            })



            $("#fname").on({
                keydown: function (e) {
                    if (((e.which >= 32 && e.which <= 64) && (e.which != 46 && e.which != 37 && e.which != 39 && e.which != 35 && e.which != 36))
                        || (e.which >= 91 && e.which <= 96) || (e.which >= 186 && e.which <= 222)) {
                        return false;
                    }
                }
            })

            $("#mname").on({
                keydown: function (e) {
                    if (((e.which >= 32 && e.which <= 64) && (e.which != 46 && e.which != 37 && e.which != 39 && e.which != 35 && e.which != 36))
                        || (e.which >= 91 && e.which <= 96) || (e.which >= 186 && e.which <= 222)) {
                        return false;
                    }
                }
            })

            $("#lname").on({
                keydown: function (e) {
                    if (((e.which >= 32 && e.which <= 64) && (e.which != 46 && e.which != 37 && e.which != 39 && e.which != 35 && e.which != 36))
                        || (e.which >= 91 && e.which <= 96) || (e.which >= 186 && e.which <= 222)) {
                        return false;
                    }
                }
            })



            $("#file").blur(function () {
                $.ajax({
                    data: { filename: $("#file").val() },
                    url: '/Users/checkImage',
                    success: function (data) {
                        $("#errorImage").html(data);
                    },

                    error: function (data) {
                        alert("Something went wrong!");
                    }
                })
            })

            $("#fileEdit").blur(function () {
                $.ajax({
                    data: { filename: $("#fileEdit").val() },
                    url: '/Users/checkImage',
                    success: function (data) {
                        $("#errorImageUpdate").html(data);
                    },

                    error: function (data) {
                        alert("Something went wrong!");
                    }
                })
            })

            $("#file").change(function () {
                var files = this.files;
                var reader = new FileReader();
                name = this.value;

                reader.onload = function (e) {
                    console.log(e);
                    $("#userpic").html("<a><img src='" + e.target.result + "' width='60' height='60' />");
                };
                reader.readAsDataURL(files[0]);

                var filename = document.getElementById('file').value;
                var formattedText = filename.replace('C:\\fakepath\\', "");

                document.getElementById('fileUpload').value = formattedText;
            });

            $("#fileEdit").change(function () {
                var files = this.files;
                var reader = new FileReader();
                name = this.value;

                reader.onload = function (e) {
                    console.log(e);
                    $("#userpicEdit").html("<a><img src='" + e.target.result + "' width='60' height='60' />");
                };
                reader.readAsDataURL(files[0]);

                var filename = document.getElementById('fileEdit').value;
                var formattedText = filename.replace('C:\\fakepath\\', "");

                document.getElementById('fileUploadEdit').value = formattedText;
            });

            function clearFormFields() {


                $("#txtFname").val("");
                $("#txtMname").val("");
                $("#txtLname").val("");
                $("#txtLogin").val("");
                $("#txtEmail").val("");
                $("#dropdowndept").val("");
                $("#dropdownusertype").val("");
                $("#hiddenuserid").val("");
                $("#txtPassword").val("");
                $("#txtReenterPassword").val("");

                $("#users_IsActive").attr("checked", false);
                //$("#users_IsAdmin").attr("checked", false);
                $("#fileUpload").val("");
                $("#fileUploadEdit").val("");
                $("#userpic").empty();
                $("#userpicEdit").empty();

                // Clear Add page errors
                $("#errorFname").empty();
                $("#errorMname").empty();
                $("#errorLname").empty();

                $("#errorLogin").empty();
                $("#errorEmail").empty();
                $("#errordept").empty();
                $("#errorusertype").empty();
                $("#errorCountry").empty();
                $("#errorGover").empty();
                $("#errorArea").empty();
                $("#errorPwd").empty();
                $("#errorRePwd").empty();

                // Clear Edit page errors
                $("#errorFnameEdit").empty();
                $("#errorMnameEdit").empty();
                $("#errorLnameEdit").empty();
                $("#errorGenderEdit").empty();
                $("#errorLoginEdit").empty();
                $("#errorEmailEdit").empty();
                $("#erroreditdept").empty();
                $("#erroreditusrtyp").empty();
                $("#errorPwdEdit").empty();

                $("label").removeClass("state-error");
                $("label").removeClass("state-success");
                $(".field-validation-error").html("");
            }


            $("#btnaddcancel").click(function () {
                $("#AddUser").hide(1000);
                $("#EditUser").hide(1000);
                clearFormFields();

            })


            $("#btneditcancel").click(function () {
                $("#AddUser").hide(1000);
                $("#EditUser").hide(1000);
                clearFormFields();

            })

            $("#btnAddUser").click(function () {
                $("#AddUser").show(1000);
                $("#EditUser").hide(1000);
                clearFormFields();
            })

            $("#btnEditUser").click(function () {
                var rowKey = $("#jqgrid").getGridParam("selrow");

                if ($("#jqgrid").getGridParam("selrow") == null) {
                    alert("Select a row to edit!");
                }

                else {

                    $("#EditUser").show(1000);
                    $("#AddUser").hide(1000);
                    clearFormFields();

                    $.ajax({
                        data: { id: rowKey },
                        url: '/Users/getDetails/',
                        dataType: 'json',
                        success: function (data) {

                            $("#fname").val(data.UserFirstName);
                            $("#mname").val(data.UserMiddleName);
                            $("#lname").val(data.UserLastName);
                            $("#loginname").val(data.UserLoginName);
                            $("#email").val(data.UserEmailID);
                            $("#dept").val(data.UserDepartmentID);
                            $("#usertype").val(data.UserTypeID);
                            $("#hiddenuserid").val(data.UserID);

                            $("#hiddenuserpic").val(data.UserPic);

                            if (data.IsActive == true) {
                                $("#isActive").attr("checked", true);
                            }
                            else {
                                $("#isActive").attr("checked", false);
                            }

                        },

                        error: function (data) {
                            alert("error");
                            return false;
                        }
                    });
                }
            })

            function UserPicFormatter(cellvalue, options, rowObject) {
                var html = "<img src='" + cellvalue + "' height='" + 50 + "px' width='" + 50 + "px' />";
                return html;
            }


            //$("#txtEmail").blur(function () {
            //    var regexstring = (/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i)

            //    if ($("#txtEmail").val() == "") {

            //                $("#errorEmail").html('Email is Required');

            //    }
            //    else if (($("#txtEmail").val().length > 0) && !regexstring.test($("#txtEmail").val())) {

            //        $("#errorEmail").html('Invalid Email format');

            //    }
            //    else if ($("#txtEmail").val().length > 50) {

            //        $("#errorEmail").html('Feild length should be maximum 50 characters');

            //    }
            //    else {
            //        $.ajax({
            //            data: { UserID: 0, UserEmailID: $("#txtEmail").val() },
            //            url: '/Users/checkEmailForMessage',
            //            success: function (data) {
            //                $("#errorEmail").html(data);
            //            },

            //            error: function (data) {
            //                alert("Something went wrong!");
            //            }
            //        })
            //        $("#errorEmail").empty();
            //    }
            //})


            //$("#email").blur(function () {
            //    var regexstring = (/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i)

            //    if ($("#email").val() == "") {

            //                $("#errorEmailEdit").html('Email is Required');
            //                return false;
            //    }
            //    else if (($("#email").val().length > 0) && !regexstring.test($("#email").val())) {

            //        $("#errorEmailEdit").html('Invalid Email format');
            //        return false;
            //    }
            //    else {
            //        $.ajax({
            //            data: { UserID: $("#hiddenuserid").val(), UserEmailID: $("#email").val() },
            //            url: '/Users/checkEmailForMessage',
            //            success: function (data) {
            //                $("#errorEmailEdit").html(data);
            //                return false;
            //            },

            //            error: function (data) {
            //                alert("Something went wrong!");
            //                return false;
            //            }
            //        })
            //        $("#errorEmailEdit").empty();
            //        return true;
            //    }
            //})
        })
    </script>

    <script>
        $(document).ready(function () {



            var jqgrid_data = [];
            jQuery("#jqgrid").jqGrid({
                url: '/Users/GetUserDetails/',
                datatype: 'json',
                mtype: 'GET',
                jsonReader: {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: false,
                    userdata: "userdata",
                    cell: "cell",
                    id: "id"
                },
                height: 'auto',
                colNames: ['User ID', 'Sl.No', 'User Name', 'Password', 'ConfirmPassword', 'User Type', 'Department Type', 'FirstName', 'Middle Name', 'LastName', 'email', 'User Image', 'Disabled'],
                colModel: [{
                    name: 'UserID',
                    index: 'UserID',
                    editable: false,
                    readonly: true,
                    hidden: true
                }, {
                    name: 'slno',
                    index: 'slno',
                    editable: false,
                    hidden: false,
                    width: '40',
                    formatter: 'integer',
                    sorttype: 'integer',
                    sortable: true

                }, {
                    name: 'UserName',
                    index: 'UserName',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,

                },
                {
                    name: 'UserPassword',
                    index: 'UserPassword',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,
                    hidden: true
                },
                {
                    name: 'ConfirmUserPassword',
                    index: 'ConfirmUserPassword',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,
                    hidden: true

                },
                 {
                     name: 'UserTypeID',
                     index: 'UserTypeID',
                     classes: 'wrap',
                     editable: true,
                     sortable: false,

                 },
                 {
                     name: 'DepartmentID',
                     index: 'DepartmentID',
                     classes: 'wrap',
                     editable: true,
                     sortable: false,

                 },
                {
                    name: 'FirstName',
                    index: 'FirstName',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,

                },
                {
                    name: 'MiddleName',
                    index: 'MiddleName',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,

                },
                {
                    name: 'LastName',
                    index: 'LastName',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,

                },
                {
                    name: 'EmailAddress',
                    index: 'EmailAddress',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,

                },
                {
                    name: 'UserImage',
                    index: 'customer_id',
                    align: 'left',
                    editable: true,
                    edittype: 'file',
                    editoptions: {
                        enctype: "multipart/form-data"
                    },
                    width: 210,
                    align: 'center',
                    //  formatter: ImageFormatter,
                    search: false,
                    hidden: true
                },
                {
                    name: 'Disabled',
                    index: 'Disabled',
                    align: "middle",
                    editable: true,
                    edittype: 'checkbox',
                    edittype: 'checkbox',
                    //formatter: "checkbox",
                    //formatoptions: { disabled: false },
                    stype: "select",
                    searchoptions: { sopt: ["eq", "ne"], value: "Yes:true;No:false" }
                }],
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: '#pjqgrid',
                loadonce: true,
                sortname: 'SlNo asc',
                sortorder: 'asc',
                toolbarfilter: true,
                viewrecords: true,
                gridComplete: function () {
                    var ids = jQuery("#jqgrid").jqGrid('getDataIDs');

                    //for (var i = 0; i < ids.length; i++) {
                    //    var cl = ids[i];
                    //    be = "<button class='btn btn-xs btn-default' data-original-title='Edit Row' onclick=\"jQuery('#jqgrid').editRow('" + cl + "');\"><i class='fa fa-pencil'></i></button>";
                    //    se = "<button class='btn btn-xs btn-default' data-original-title='Save Row' onclick=\"jQuery('#jqgrid').saveRow('" + cl + "');\"><i class='fa fa-save'></i></button>";
                    //    ca = "<button class='btn btn-xs btn-default' data-original-title='Cancel' onclick=\"jQuery('#jqgrid').restoreRow('" + cl + "');\"><i class='fa fa-times'></i></button>";
                    //    //ce = "<button class='btn btn-xs btn-default' onclick=\"jQuery('#jqgrid').restoreRow('"+cl+"');\"><i class='fa fa-times'></i></button>";
                    //    //jQuery("#jqgrid").jqGrid('setRowData',ids[i],{act:be+se+ce});
                    //    jQuery("#jqgrid").jqGrid('setRowData', ids[i], {
                    //        act: be + se + ca
                    //    });
                    //}
                },

                aftersavefunc: function () {
                    var $this = $(this); // grid
                    setTimeout(function () {

                        $this.trigger("reloadGrid");
                    }, 50);
                },

                //editurl: '/Users/SaveUserDetails/',
                caption: "Users",
                multiselect: false,
                autowidth: true,
                ondblClickRow: function (rowid) {

                    $("#EditUser").show(1000);
                    $("#AddUser").hide(1000);

                    var rowData = jQuery(this).getRowData(rowid);
                    var temp = rowData['UserID'];//replace name with you column



                    $.ajax({


                        url: '/Users/getDetails/',
                        data: { id: temp },
                        dataType: 'json',
                        aysnc: false,
                        success: function (data) {

                            $("#fname").val(data.UserFirstName);
                            $("#mname").val(data.UserMiddleName);
                            $("#lname").val(data.UserLastName);
                            $("#loginname").val(data.UserLoginName);
                            $("#email").val(data.UserEmailID);
                            $("#dept").val(data.UserDepartmentID);
                            $("#usertype").val(data.UserTypeID);
                            $("#hiddenuserid").val(data.UserID);

                            $("#hiddenuserpic").val(data.UserPic);

                            if (data.IsActive == true) {
                                $("#isActive").attr("checked", true);
                            }
                            else {
                                $("#isActive").attr("checked", false);
                            }
                            if (data.IsFinance == true) {
                                $("#isFinance").attr("checked", true);
                            }
                            else {
                                $("#isFinance").attr("checked", false);
                            }
                            if (data.IsVendor == true) {
                                $("#isVendor").attr("checked", true);
                            }
                            else {
                                $("#isVendor").attr("checked", false);
                            }
                        }
                    });


                }

            });

            jQuery("#jqgrid").jqGrid('navGrid', "#pjqgrid", {
                edit: true,
                add: true,
                del: true,
                refresh: true,

            },
            {
                zindex: 100,
                url: '/Users/Edit',
                closeOnEscape: true,
                closeAfterEdit: true,
                recreateForm: true,
                afterComplete: function (response) {
                    if (response.responseText) {
                        alert(response.responseText);
                    }
                }
            },
            {
                zindex: 100,
                url: '/Users/Create',
                closeOnEscape: true,
                closeAfterEdit: true,
                recreateForm: true,
                afterComplete: function (response) {
                    if (response.responseText) {
                        alert(response.responseText);
                    }
                }
            },
             {
                 zindex: 100,
                 url: '/Users/Delete',
                 closeOnEscape: true,
                 closeAfterEdit: true,
                 recreateForm: true,
                 msg: "Are You Sure You want to delete the user",
                 afterComplete: function (response) {
                     if (response.responseText) {
                         alert(response.responseText);
                     }
                 }
             }

            );
            //jQuery("#jqgrid").jqGrid('inlineNav', "#pjqgrid", {
            //    addParams: {
            //        position: "last",
            //        addRowParams: {
            //            keys: true,
            //            oneditfunc: null,
            //            successfunc: function (val) {
            //                if (parseInt(val.responseJSON.msgid, 10) > 0) {

            //                    alert(val.responseJSON.msg);
            //                                               }
            //                $("#jqgrid").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            //            }
            //        },
            //        extraparam: null,
            //        afterrestorefunc: null,
            //        restoreAfterError: true,
            //        mtype: "POST"
            //    },
            //    editParams: {
            //        keys: true,
            //        oneditfunc: null,
            //        successfunc: function (val) {
            //            if (parseInt(val.responseJSON.msgid, 10) > 0) {

            //                alert(val.responseJSON.msg);
            //                ;
            //            }
            //            $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            //        },
            //        //oneditfunc: function (rowid) {
            //        //    alert("row with rowid=" + rowid + " is editing.");
            //        //},
            //        //aftersavefunc: function (rowid, response, options) {
            //        //    alert("row with rowid=" + rowid + " is "+JSON.stringify(response));
            //        //},

            //        errorfunc: function(rowid, res) {
            //            $.jgrid.info_dialog($.jgrid.errors.errcap, res.responseText , $.jgrid.edit.bClose, {top:400,left:565});
            //        },
            //        url: null,
            //        extraparam: null,
            //        aftersavefunc: null,
            //        errorfunc: null,
            //        afterrestorefunc: null,
            //        restoreAfterError: true,
            //        mtype: "POST"
            //    }


            //});

            /* Add tooltips */
            $('.navtable .ui-pg-button').tooltip({
                container: 'body'
            });

            jQuery("#m1").click(function () {
                var s;
                s = jQuery("#jqgrid").jqGrid('getGridParam', 'selarrrow');

            });
            jQuery("#m1s").click(function () {
                jQuery("#jqgrid").jqGrid('setSelection', "13");

            });

            // remove classes
            $(".ui-jqgrid").removeClass("ui-widget ui-widget-content");
            $(".ui-jqgrid-view").children().removeClass("ui-widget-header ui-state-default");
            $(".ui-jqgrid-labels, .ui-search-toolbar").children().removeClass("ui-state-default ui-th-column ui-th-ltr");
            $(".ui-jqgrid-pager").removeClass("ui-state-default");
            $(".ui-jqgrid").removeClass("ui-widget-content");

            // add classes
            //  $(".ui-jqgrid-htable").addClass("table table-bordered table-hover");
            //  $(".ui-jqgrid-btable").addClass("table table-bordered table-striped");

            //  $(".ui-pg-div").removeClass().addClass("btn btn-sm btn-primary");
            // $(".ui-icon.ui-icon-plus").removeClass().addClass("fa fa-plus");
            // $(".ui-icon.ui-icon-pencil").removeClass().addClass("fa fa-pencil");
            //   $(".ui-icon.ui-icon-trash").removeClass().addClass("fa fa-trash-o");
            $(".ui-icon.ui-icon-search").removeClass().addClass("fa fa-search");
            $(".ui-icon.ui-icon-refresh").removeClass().addClass("fa fa-refresh");
            $(".ui-icon.ui-icon-plus").parent().parent().remove();
            $(".ui-icon.ui-icon-pencil").parent().parent().remove();
            $(".ui-icon.ui-icon-trash").parent().parent().remove();
            $(".ui-icon ui-icon-closethick").removeClass().addClass("fa fa-close");
            // $(".ui-icon.ui-icon-disk").removeClass().addClass("fa fa-save").parent(".btn-primary").removeClass("btn-primary").addClass("btn-success");
            // $(".ui-icon.ui-icon-cancel").removeClass().addClass("fa fa-times").parent(".btn-primary").removeClass("btn-primary").addClass("btn-danger");

            $(".ui-icon.ui-icon-seek-prev").wrap("<div class='btn btn-sm btn-default'></div>");
            $(".ui-icon.ui-icon-seek-prev").removeClass().addClass("fa fa-backward");

            $(".ui-icon.ui-icon-seek-first").wrap("<div class='btn btn-sm btn-default'></div>");
            $(".ui-icon.ui-icon-seek-first").removeClass().addClass("fa fa-fast-backward");

            $(".ui-icon.ui-icon-seek-next").wrap("<div class='btn btn-sm btn-default'></div>");
            $(".ui-icon.ui-icon-seek-next").removeClass().addClass("fa fa-forward");

            $(".ui-icon.ui-icon-seek-end").wrap("<div class='btn btn-sm btn-default'></div>");
            $(".ui-icon.ui-icon-seek-end").removeClass().addClass("fa fa-fast-forward");


        })
        $(window).on('resize.jqGrid', function () {
            $("#jqgrid").jqGrid('setGridWidth', $("#content").width());



            $(".js-status-update a").click(function () {

                var selText = $(this).text();
                var $this = $(this);
                $this.parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');
                $this.parents('.dropdown-menu').find('li').removeClass('active');
                $this.parent().addClass('active');
            });



        });
    </script>
}

