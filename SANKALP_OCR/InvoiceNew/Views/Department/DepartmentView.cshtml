@model  IEnumerable<InvoiceNew.Models.Department>

@{
    ViewBag.Title = "DepartmentView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 1;
}

<div id="content">

    <!-- row -->
    <div class="row">

        <!-- col -->
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h3 class="page-title txt-color-blueDark">
                <!-- PAGE HEADER --><i class="fa-fw fa fa-home"></i> IQ invoice <span>
                    >>
                   Departments
                </span>
            </h3>
        </div>
        <!-- end col -->
        <!-- right side of the page with the sparkline graphs -->
        <!-- col -->
        <!-- end col -->

    </div>
    <!-- end row -->
    <!--
    The ID "widget-grid" will start to initialize all widgets below
    You do not need to use widgets if you dont want to. Simply remove
    the <section></section> and you can use wells or panels instead
    -->
    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <div class="row" id="symaindiv">

            <!-- NEW WIDGET START -->
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div id="deptView">
                    <div class="table-responsive">
                        <table id="myInvoices" class="display table table-bordered table-hover table-striped">
                            <thead>
                                <tr>
                                    <th> SL No </th>
                                    <th> Department Name </th>
                                    <th> Department Description</th>

                                    <th>Disabled</th>
                                    <th></th>
                                    <th></th>
                                    @*
                        <th class="nosort">&nbsp;</th>*@


                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var m in Model)
                                {
                                    <tr class="invoiceinfo">
                                        <td>@i</td>
                                        <td>
                                            @Html.HiddenFor(model => @m.DeptID)
                                            @Html.DisplayFor(model => @m.DeptName)
                                            @Html.TextBoxFor(model => @m.DeptName, new { style = "display:none" })
                                        </td>
                                        <td>@Html.DisplayFor(model => @m.DeptDescription)
                                            @Html.TextBoxFor(model => @m.DeptDescription, new { style = "display:none" })
                                         </td>
                                        <td>@Html.DisplayFor(model => @m.Disabled)</td>

                                        
                                    <td>@Html.ActionLink("Edit", "Edit", new { id = @m.DeptID})</td>
                                        <td>@Html.ActionLink("Delete", "Delete", new { id = @m.DeptID })</td>
                                    </tr>
                                    i++;
                                }

                            </tbody>

                        </table>
                    </div>
                </div>

                <br>


            </div>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->

    </section>
    <!-- end widget grid -->

</div>


<style type="text/css">
    .ui-jqgrid tr.jqgrow td.wrap {
        white-space: normal !important;
        height: auto;
        padding-top: 2px;
        word-wrap: break-word;
    }

    .ui-jqgrid tr.jqgrow td {
        white-space: normal !important;
        height: auto;
        vertical-align: text-top;
        padding-top: 2px;
        word-wrap: break-word;
    }
</style>





<!-- Link to Google CDN's jQuery + jQueryUI; fall back to local -->
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@
<script>
    if (!window.jQuery) {
        document.write('<script src="js/libs/jquery-2.1.1.min.js"><\/script>');
    }
</script>

<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script>
    if (!window.jQuery.ui) {
        document.write('<script src="js/libs/jquery-ui-1.10.3.min.js"><\/script>');
    }
</script>

<!--<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">-->
<!-- Basic Styles -->
@*<link href="~/Content/bootstrap/css/bootstrap.min.css" rel="stylesheet" />*@
<link href="~/Content/dist/css/font-awesome.min.css" rel="stylesheet" />


<!-- SmartAdmin Styles : Caution! DO NOT change the order -->
<link href="~/Content/dist/css/smartadmin-production-plugins.min.css" rel="stylesheet" />

<link href="~/Content/dist/css/smartadmin-production.min.css" rel="stylesheet" />

<link href="~/Content/dist/css/smartadmin-skins.min.css" rel="stylesheet" />
<link href="~/Content/dist/css/smartadmin-rtl.min.css" rel="stylesheet" />


<link href="~/Content/css/demo.min.css" rel="stylesheet" />


<!-- FAVICONS -->
<link rel="shortcut icon" href="img/favicon/favicon.ico" type="image/x-icon">
<link rel="icon" href="img/favicon/favicon.ico" type="image/x-icon">

<!-- GOOGLE FONT -->
<link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,300,400,700">

<!-- Specifying a Webpage Icon for Web Clip
     Ref: https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html -->
<!-- IMPORTANT: APP CONFIG -->
<script src="~/Scripts/app.config.js"></script>


<!-- JS TOUCH : include this plugin for mobile drag / drop touch events-->
<script src="~/Scripts/plugin/jquery-touch/jquery.ui.touch-punch.min.js"></script>

<!-- BOOTSTRAP JS -->
<script src="~/Scripts/bootstrap.min.js"></script>


<!-- CUSTOM NOTIFICATION -->
<script src="~/Scripts/notification/SmartNotification.min.js"></script>

<!-- JARVIS WIDGETS -->
<script src="~/Scripts/smartwidgets/jarvis.widget.min.js"></script>


<!-- EASY PIE CHARTS -->
<script src="~/Scripts/plugin/easy-pie-chart/jquery.easy-pie-chart.min.js"></script>


<!-- SPARKLINES -->
<script src="~/Scripts/plugin/sparkline/jquery.sparkline.min.js"></script>

<!-- JQUERY VALIDATE -->
<script src="~/Scripts/plugin/jquery-validate/jquery.validate.min.js"></script>

<!-- JQUERY MASKED INPUT -->
<script src="~/Scripts/plugin/masked-input/jquery.maskedinput.min.js"></script>

<!-- JQUERY SELECT2 INPUT -->
<script src="~/Scripts/plugin/select2/select2.min.js"></script>

<!-- JQUERY UI + Bootstrap Slider -->
<script src="~/Scripts/plugin/bootstrap-slider/bootstrap-slider.min.js"></script>



<!-- FastClick: For mobile devices -->
<script src="~/Scripts/plugin/fastclick/fastclick.min.js"></script>


<!-- browser msie issue fix -->
<script src="~/Scripts/plugin/msie-fix/jquery.mb.browser.min.js"></script>
<script src="~/Scripts/demo.min.js"></script>
<script src="~/Scripts/jqGrid/grid.locale-en.js" type="text/javascript"></script>
<script src="~/Scripts/jqGrid/jquery.jqGrid.min.js"></script>
<link href="~/Content/ui.jqgrid.css" rel="stylesheet" />
<script data-pace-options='{ "restartOnRequestAfter": true }' src="~/Scripts/plugin/pace/pace.min.js"></script>

<!-- MAIN APP JS FILE -->
@*<script src="~/Scripts/app.min.js"></script>*@
    <script>
        $(document).ready(function () {

            //jQuery.browser = {};
            //(function () {
            //    jQuery.browser.msie = false;
            //    jQuery.browser.version = 0;
            //    if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
            //        jQuery.browser.msie = true;
            //        jQuery.browser.version = RegExp.$1;
            //    }
            //})();


            var t = $('#myInvoices').DataTable({
                "columnDefs": [{
                    "searchable": false,
                    "orderable": false,
                    "targets": 0
                }]
            });




            $(".breadcrumb li:contains('Home')").remove();
            $(".breadcrumb li:contains('Reports')").remove();
            $(".breadcrumb li:contains('Administration')").remove();

            $('.breadcrumb').prepend('<li>Departments</li>');
            $('.breadcrumb').prepend('<li>Home</li>');
           

            var jqgrid_data = [];
            jQuery("#jqgrid").jqGrid({
                url: '/Department/GetDepartmentDetails/',
                datatype: 'json',
                mtype: 'POST',
              //  global: false,
                jsonReader: {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: false,
                    userdata: "userdata",
                    cell: "cell",
                    id: "id"
                },
                height: 'auto',
                colNames: ['Department ID', 'Sl.No', 'Department Name', 'Department Description', 'Disabled'],
                colModel: [{
                    name: 'id',
                    index: 'id',
                    editable: false,
                    readonly: true,
                    hidden: true
                }, {
                    name: 'slno',
                    index: 'slno',
                    editable: false,
                    hidden: false,
                    width: '20%',
                    formatter: 'integer',
                    sorttype: 'integer',
                    sortable: true

                }, {
                    name: 'deptname',
                    index: 'deptname',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,
                    
                },{
                    name: 'deptdescription',
                    index: 'deptdescription',
                    classes: 'wrap',
                    editable: true,
                    sortable: false,
                    
                },{
                    name: 'deptdisabled',
                    index: 'deptdisabled',
                    align: "middle",
                    editable: true,
                    edittype: 'checkbox',
                    edittype: 'checkbox',
                    //formatter: "checkbox",
                    //formatoptions: { disabled: false },
                    stype: "select",
                    searchoptions: { sopt: ["eq", "ne"], value: "Yes:true;No:false" }
                }],
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: '#pjqgrid',
                loadonce: true,
                sortname: 'SlNo asc',
                sortorder: 'asc',
                toolbarfilter: true,
                viewrecords: true,
                type:"post",
               //// global: false,
               // gridComplete: function () {
               //     var ids = jQuery("#jqgrid").jqGrid('getDataIDs');
               //     for (var i = 0; i < ids.length; i++) {
               //         var cl = ids[i];

               //         be = "<button class='btn btn-xs btn-default' data-original-title='Edit Row' onclick=\"jQuery('#jqgrid').editRow('" + cl + "');\"><i class='fa fa-pencil'></i></button>";
               //         se = "<button class='btn btn-xs btn-default' data-original-title='Save Row' onclick=\"jQuery('#jqgrid').saveRow('" + cl + "');\"><i class='fa fa-save'></i></button>";
               //         ca = "<button class='btn btn-xs btn-default' data-original-title='Cancel' onclick=\"jQuery('#jqgrid').restoreRow('" + cl + "');\"><i class='fa fa-times'></i></button>";
               //         //ce = "<button class='btn btn-xs btn-default' onclick=\"jQuery('#jqgrid').restoreRow('"+cl+"');\"><i class='fa fa-times'></i></button>";
               //         //jQuery("#jqgrid").jqGrid('setRowData',ids[i],{act:be+se+ce});
               //         jQuery("#jqgrid").jqGrid('setRowData', ids[i], {
               //             act: be + se + ca
               //         });
               //     }
               // },

                aftersavefunc: function () {
                    var $this = $(this); // grid
                    setTimeout(function () {

                        $this.trigger("reloadGrid");
                    }, 50);
                },

                editUrl: '/Department/SaveDepartmentDetails/',
                caption: "Department",
                multiselect: false,
                autowidth: true
            });

            //jQuery("#jqgrid").jqGrid('navGrid', "#pjqgrid", {
            //    edit: true,
            //    add: true,
            //    del: true

            //});
            jQuery('#jqgrid').jqGrid('navGrid', '#pjqgrid', { edit: true, add: true, del: true },
    //edit options
    { url: '/Department/SaveDepartmentDetails/' },
    //add options
    { url: '/Department/SaveDepartmentDetails/' },
    //delete options
    { url: '/Department/SaveDepartmentDetails/' }
);
            //jQuery("#jqgrid").jqGrid('inlineNav', "#pjqgrid", {
            //    addParams: {
            //        position: "last",
            //        addRowParams: {
            //            keys: true,
            //            oneditfunc: null,
            //            successfunc: function (val) {
            //                if (parseInt(val.responseJSON.msgid, 10) > 0) {
                                          
            //                    alert(val.responseJSON.msg);
            //                    //$.smallBox({
            //                    //                  title: "Message",
            //                    //                  content: val.responseJSON.msg,
            //                    //                  color: "#659265",
            //                    //                  iconSmall: "fa fa-check fa-2x fadeInRight animated",
            //                    //                  timeout: 4000
            //                    //              });
            //                }
            //                $("#jqgrid").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            //            }
            //        },
            //        extraparam: null,
            //        afterrestorefunc: null,
            //        restoreAfterError: true,
            //        mtype: "POST"
            //    },
            //    //editParams: {
            //    //    keys: true,
            //    //    oneditfunc: null,
            //    //    successfunc: function (val) {
            //    //        if (parseInt(val.responseJSON.msgid, 10) > 0) {

            //    //            alert(val.responseJSON.msg);
            //    //            //  customMessage.show(val.responseJSON.msg, {
            //    //            //    hideafter: 8000, x: "40%", y: "30%", width: "30%", height: "50px",
            //    //            //    color: "#ff0010", padding: {
            //    //            //        paddingTop: "5px", paddingLeft: "10px", paddingRight: "10px", paddingBottom: "5px"
            //    //            //    }, background: "#fff", borderRadius: "6px 6px", border: "1px solid #000", shadow: "1px 1px 10px 0px  #aaa"
            //    //            //});
            //    //        }
            //    //        $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            //    //    },
            //    //    //oneditfunc: function (rowid) {
            //    //    //    alert("row with rowid=" + rowid + " is editing.");
            //    //    //},
            //    //    //aftersavefunc: function (rowid, response, options) {
            //    //    //    alert("row with rowid=" + rowid + " is "+JSON.stringify(response));
            //    //    //},

            //    //    errorfunc: function(rowid, res) {
            //    //        $.jgrid.info_dialog($.jgrid.errors.errcap, res.responseText , $.jgrid.edit.bClose, {top:400,left:565});
            //    //    },
            //    //    url: null,
            //    //    extraparam: null,
            //    //    aftersavefunc: null,
            //    //    errorfunc: null,
            //    //    afterrestorefunc: null,
            //    //    restoreAfterError: true,
            //    //    mtype: "POST"
            //    //}


            //});

            ///* Add tooltips */
            //$('.navtable .ui-pg-button').tooltip({
            //    container: 'body'
            //});

            //jQuery("#m1").click(function () {
            //    var s;
            //    s = jQuery("#jqgrid").jqGrid('getGridParam', 'selarrrow');

            //});
            //jQuery("#m1s").click(function () {
            //    jQuery("#jqgrid").jqGrid('setSelection', "13");

            //});

            //// remove classes
            //$(".ui-jqgrid").removeClass("ui-widget ui-widget-content");
            //$(".ui-jqgrid-view").children().removeClass("ui-widget-header ui-state-default");
            //$(".ui-jqgrid-labels, .ui-search-toolbar").children().removeClass("ui-state-default ui-th-column ui-th-ltr");
            //$(".ui-jqgrid-pager").removeClass("ui-state-default");
            //$(".ui-jqgrid").removeClass("ui-widget-content");

            //// add classes
            //$(".ui-jqgrid-htable").addClass("table table-bordered table-hover");
            //$(".ui-jqgrid-btable").addClass("table table-bordered table-striped");

            //$(".ui-pg-div").removeClass().addClass("btn btn-sm btn-primary");
            //$(".ui-icon.ui-icon-plus").removeClass().addClass("fa fa-plus");
            //$(".ui-icon.ui-icon-pencil").removeClass().addClass("fa fa-pencil");
            //$(".ui-icon.ui-icon-trash").removeClass().addClass("fa fa-trash-o");
            //$(".ui-icon.ui-icon-search").removeClass().addClass("fa fa-search");
            //$(".ui-icon.ui-icon-refresh").removeClass().addClass("fa fa-refresh");
            //$(".ui-icon.ui-icon-disk").removeClass().addClass("fa fa-save").parent(".btn-primary").removeClass("btn-primary").addClass("btn-success");
            //$(".ui-icon.ui-icon-cancel").removeClass().addClass("fa fa-times").parent(".btn-primary").removeClass("btn-primary").addClass("btn-danger");

            //$(".ui-icon.ui-icon-seek-prev").wrap("<div class='btn btn-sm btn-default'></div>");
            //$(".ui-icon.ui-icon-seek-prev").removeClass().addClass("fa fa-backward");

            //$(".ui-icon.ui-icon-seek-first").wrap("<div class='btn btn-sm btn-default'></div>");
            //$(".ui-icon.ui-icon-seek-first").removeClass().addClass("fa fa-fast-backward");

            //$(".ui-icon.ui-icon-seek-next").wrap("<div class='btn btn-sm btn-default'></div>");
            //$(".ui-icon.ui-icon-seek-next").removeClass().addClass("fa fa-forward");

            //$(".ui-icon.ui-icon-seek-end").wrap("<div class='btn btn-sm btn-default'></div>");
            //$(".ui-icon.ui-icon-seek-end").removeClass().addClass("fa fa-fast-forward");


        })
        //$(window).on('resize.jqGrid', function () {
        //    $("#jqgrid").jqGrid('setGridWidth', $("#content").width());



        //    $(".js-status-update a").click(function () {

        //        var selText = $(this).text();
        //        var $this = $(this);
        //        $this.parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');
        //        $this.parents('.dropdown-menu').find('li').removeClass('active');
        //        $this.parent().addClass('active');
        //    });

        //    /*
        //    * TODO: add a way to add more todo's to list
        //    */

        //    // initialize sortable
        //    $(function () {
        //        $("#sortable1, #sortable2").sortable({
        //            handle: '.handle',
        //            connectWith: ".todo",
        //            update: countTasks
        //        }).disableSelection();
        //    });

        //    //// check and uncheck
        //    //$('.todo .checkbox > input[type="checkbox"]').click(function () {
        //    //    var $this = $(this).parent().parent().parent();

        //    //    if ($(this).prop('checked')) {
        //    //        $this.addClass("complete");

        //    //        // remove this if you want to undo a check list once checked
        //    //        //$(this).attr("disabled", true);
        //    //        $(this).parent().hide();

        //    //        // once clicked - add class, copy to memory then remove and add to sortable3
        //    //        $this.slideUp(500, function () {
        //    //            $this.clone().prependTo("#sortable3").effect("highlight", {}, 800);
        //    //            $this.remove();
        //    //            countTasks();
        //    //        });
        //    //    } else {
        //    //        // insert undo code here...
        //    //    }

        //    //})
            //// count tasks
            //function countTasks() {

            //    $('.todo-group-title').each(function () {
            //        var $this = $(this);
            //        $this.find(".num-of-tasks").text($this.next().find("li").size());
            //    });

            //}
           
        //});
    </script>
